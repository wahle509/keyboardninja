<html>
<head>
<title>Keyboard Ninja</title>
<link rel="icon" type="image/png" href="favicon.ico">
<style>
body {font-family:Courier}

#title {font-size:28}
#subtitle {font-size:20; text-decoration:underline}

#belt {padding:4}

#keyboard span{
 font-size:24;
 box-shadow:3px 3px 1px #ababab;
 padding-top:2;
 padding-left:5;
 padding-right:24;
 padding-bottom:18;
 border-radius:4px;
 border:2px solid #dedede;
 margin-right:-3px;
 }
#keyboard div {margin-bottom:30}

#row1 {}
#rowQ {margin-left:15}
#rowA {margin-left:30}
#rowZ {margin-left:45}

/* Upgrades */
#keyPower2, #hireRobot {padding:10; background-color:#dedede; color:#ababab; cursor:pointer; margin-bottom:5}

#keyPowerUp {visibility:hidden; background-color:#efefef; padding-left:8; padding-right:8; float:right}
#keyPowerUp:hover {background-color:#cdcdcd}

#script1Count{font-size:28; position:absolute}

/* Achievements */
#keyCount10, #keyCount100, #keyCount1K, #keyCount10K, #numbers1, #letters1 {border:1px dotted #565656; padding:5px; visibility:hidden}
#masterKey {border:1px dotted #565656; padding:5px; visibility:hidden; background-color:black; color:gold; font-weight:bold}
#yellowBelt {background-color:#F3F781; border:1px dotted #565656; padding:5px; visibility:hidden}
#goldBelt {background-color:#FACC2E; border:1px dotted #565656; padding:5px; visibility:hidden}
#orangeBelt {background-color:#FE9A2E; border:1px dotted #565656; padding:5px; visibility:hidden}
#greenBelt {background-color:#01DF01; border:1px dotted #565656; padding:5px; visibility:hidden}
#blueBelt {background-color:#00BFFF; border:1px dotted #565656; padding:5px; visibility:hidden}

#keyCount10Info, #keyCount100Info, #keyCount1KInfo, #keyCount10KInfo, #numbers1Info, #letters1Info, #yellowBeltInfo, #goldBeltInfo, #orangeBeltInfo, #greenBeltInfo, #blueBeltInfo, #masterKeyInfo {font-style:italic; font-size:12; visibility:hidden; position:absolute; margin-top:30; background-color:#dedede; padding:3}

#keyCount10:hover #keyCount10Info {visibility:visible}
#keyCount100:hover #keyCount100Info {visibility:visible}
#keyCount1K:hover #keyCount1KInfo {visibility:visible}
#keyCount10K:hover #keyCount10KInfo {visibility:visible}
#numbers1:hover #numbers1Info {visibility:visible}
#letters1:hover #letters1Info {visibility:visible}
#yellowBelt:hover #yellowBeltInfo {visibility:visible}
#goldBelt:hover #goldBeltInfo {visibility:visible}
#orangeBelt:hover #orangeBeltInfo {visibility:visible}
#greenBelt:hover #greenBeltInfo {visibility:visible}
#blueBelt:hover #blueBeltInfo {visibility:visible}
#masterKey:hover #masterKeyInfo {visibility:visible}
</style>

<script>

var timerS;
var timerB;
var timerSB;

var keyCount = 0;
var totalKeyCount = 0;
var avgKeyCount = 0;
var keyCarton = 0;
var key;
var manualKeyPress = 1;
var keysFormat = 0;

var keyDownColor = "#aaaaaa";
var keyUpColor = "#dedede";

var currentBelt = "white";

var keyPowerAvail = false;
var keyPowerActive = false;
var keyBotAvail = false;
var keyBotActive = false;
var script1Cost = 10;
var script1Count = 0;
var scriptAutoCount = 0;

var numAchievement = false;
var letterAchievement = false;
var yellowAchievement = false;
var goldAchievement = false;
var orangeAchievement = false;
var greenAchievement = false;
var blueAchievement = false;
var purpleAchievement = false;
var brownAchievement = false;
var redAchievement = false;
var blackAchievement = false;

//Array for key counts
var keys = [];
for(i=0;i<36;i++) {keys.push(0);}

var yellowBeltReq = 1;
var goldBeltReq = 2;
var orangeBeltReq = 3;
var greenBeltReq = 4;
var blueBeltReq = 5;
var purpleBeltReq = 6;
var brownBeltReq = 7;
var redBeltReq = 8;
var blackBeltReq = 9;
var mBlackBeltReq = 10;

var keyPowerUpReq = 5000;

var randomKey = 0;

function timer() {timerS = setInterval(oneM,100);}

function oneM() {
	document.getElementById("totalKeys").innerHTML = keyCount;
	
	//Average Key Count
	totalKeyCount = 0;
	for (i=0; i<36; i++) {
		totalKeyCount += keys[i];
	}
	avgKeyCount = totalKeyCount/36;
	document.getElementById("avgKeys").innerHTML = Math.ceil(avgKeyCount * 100) / 100;
	
	//Belt Upgrade Available
	if (currentBelt == "yellow") {
		keyPowerAvail = true;
		document.getElementById("keyPower2").style.color = "black";
		document.getElementById("keyPower2").style.backgroundColor = "#BEF781";
	}
	
	//Key Power Active
	if (keyPowerActive == true) {
		document.getElementById("keyPower2").style.backgroundColor = "#ADE781";
		document.getElementById("keyPowerText").innerHTML = "Keys x2 Activated!";
		document.getElementById("keyPowerRate").innerHTML = "2/p";
	}
	
	//Key Power Up Available
	if (keyCarton >= keyPowerUpReq) {
		document.getElementById("keyPowerUp").style.backgroundColor = "gold";
	}
	
	//Script 1 Available
	if (keyCarton >= script1Cost) {
		keyBotAvail = true;
		document.getElementById("hireRobot").style.color = "black";
		document.getElementById("hireRobot").style.backgroundColor = "#BEF781";
	}
	else {
		keyBotAvail = false;
		document.getElementById("hireRobot").style.color = "#ababab";
		document.getElementById("hireRobot").style.backgroundColor = "#DEDEDE";
	}
	
	//10 Key Presses
	if (keyCount >= 10) {document.getElementById("keyCount10").style.visibility = "visible";}	
	
	//100 Key Presses
	if (keyCount >= 100){document.getElementById("keyCount100").style.visibility = "visible";}

	//1K Key Presses
	if (keyCount >= 1000){document.getElementById("keyCount1K").style.visibility = "visible";}	
	
	//10K Key Presses
	if (keyCount >= 10000){document.getElementById("keyCount10K").style.visibility = "visible";}
	
	//Numbers1 Achievement
	for (n=0; n<10; n++) {
		if (keys[n] == 0) {
			numAchievement = false;
			break;
		} else {
			numAchievement = true;
		}
	}	
	if (numAchievement == true) {document.getElementById("numbers1").style.visibility = "visible";}	
	
	//Letters1 Achievement
	for (l=10; l<36; l++) {
		if (keys[l] == 0) {
			letterAchievement = false;
			break;
		} else {
			letterAchievement = true;
		}
	}
	if (letterAchievement == true) {document.getElementById("letters1").style.visibility = "visible";}
	
	//Yellow Belt
	for (i=0; i<36; i++) {
		if (keys[i] < yellowBeltReq) {
			yellowAchievement = false;
			break;
		} else {
			yellowAchievement = true;
		}
	}
	if (yellowAchievement == true) {
		currentBelt = "yellow";
		document.getElementById("yellowBelt").style.visibility = "visible";
		document.getElementById("belt").innerHTML = "Yellow";
		document.getElementById("belt").style.backgroundColor = "#F3F781";	
	}
	
	//Gold Belt
	for (i=0; i<36; i++) {
		if (keys[i] < goldBeltReq) {
			goldAchievement = false;
			break;
		} else {
			goldAchievement = true;
		}
	}
	if (goldAchievement == true) {
		currentBelt = "gold";
		document.getElementById("goldBelt").style.visibility = "visible";
		document.getElementById("belt").innerHTML = "Gold"
		document.getElementById("belt").style.backgroundColor = "#FACC2E";	
	}
	
	//Orange Belt
	for (i=0; i<36; i++) {
		if (keys[i] < orangeBeltReq) {
			orangeAchievement = false;
			break;
		} else {
			orangeAchievement = true;
		}
	}
	if (orangeAchievement == true) {
		currentBelt = "orange";
		document.getElementById("orangeBelt").style.visibility = "visible";
		document.getElementById("belt").innerHTML = "Orange"
		document.getElementById("belt").style.backgroundColor = "#FE9A2E";	
	}
	
	//Green Belt
	for (i=0; i<36; i++) {
		if (keys[i] < greenBeltReq) {
			greenAchievement = false;
			break;
		} else {
			greenAchievement = true;
		}
	}
	if (greenAchievement == true) {
		currentBelt = "green";
		document.getElementById("greenBelt").style.visibility = "visible";
		document.getElementById("belt").innerHTML = "Green"
		document.getElementById("belt").style.backgroundColor = "#01DF01";	
	}
	
	//Blue Belt
	for (i=0; i<36; i++) {
		if (keys[i] < blueBeltReq) {
			blueAchievement = false;
			break;
		} else {
			blueAchievement = true;
		}
	}
	if (blueAchievement == true) {
		currentBelt = "blue";
		document.getElementById("blueBelt").style.visibility = "visible";
		document.getElementById("belt").innerHTML = "Blue"
		document.getElementById("belt").style.backgroundColor = "#00BFFF";	
	}

	//Master Key Achievement
	//if (key1 >= 50 || key2 >= 50 || key3 >= 50 || key4 >= 50 || key5 >= 50 || key6 >= 50 || key7 >= 50 || key8 >= 50 || key9 >= 50 || key0 >= 50 || keyA >= 50 || keyB >= 50 || keyC >= 50 || keyD >= 50 || keyE >= 50 || keyF >= 50 || keyG >= 50 || keyH >= 50 || keyI >= 50 || keyJ >= 50 || keyK >= 50 || keyL >= 50 || keyM >= 50 || keyN >= 50 || keyO >= 50 || keyP >= 50 || keyQ >= 50 || keyR >= 50 || keyS >= 50 || keyT >= 50 || keyU >= 50 || keyV >= 50 || keyW >= 50 || keyX >= 50 || keyY >= 50 || keyZ >= 50) {
	//	document.getElementById("masterKey").style.visibility = "visible";	
	//}	
}

//Keydown Event
document.addEventListener("keydown", keyPressed, false);

function keyPressed(e) {
	if (e > 47) {var keyCode = e;} 
	else {var keyCode = e.keyCode;}	
	
	switch(keyCode) {
		//row1
		case 49: document.getElementById("1").style.borderColor = keyDownColor;
			break;
		case 50: document.getElementById("2").style.borderColor = keyDownColor;
			break;
		case 51: document.getElementById("3").style.borderColor = keyDownColor;
			break;
		case 52: document.getElementById("4").style.borderColor = keyDownColor;
			break;
		case 53: document.getElementById("5").style.borderColor = keyDownColor;
			break;
		case 54: document.getElementById("6").style.borderColor = keyDownColor;
			break;
		case 55: document.getElementById("7").style.borderColor = keyDownColor;
			break;
		case 56: document.getElementById("8").style.borderColor = keyDownColor;
			break;
		case 57: document.getElementById("9").style.borderColor = keyDownColor;
			break;
		case 48: document.getElementById("0").style.borderColor = keyDownColor;
			break;
		//rowQ
		case 81: document.getElementById("q").style.borderColor = keyDownColor;
			break;
		case 87: document.getElementById("w").style.borderColor = keyDownColor;
			break;
		case 69: document.getElementById("e").style.borderColor = keyDownColor;
			break;
		case 82: document.getElementById("r").style.borderColor = keyDownColor;
			break;
		case 84: document.getElementById("t").style.borderColor = keyDownColor;
			break;
		case 89: document.getElementById("y").style.borderColor = keyDownColor;
			break;
		case 85: document.getElementById("u").style.borderColor = keyDownColor;
			break;
		case 73: document.getElementById("i").style.borderColor = keyDownColor;
			break;
		case 79: document.getElementById("o").style.borderColor = keyDownColor;
			break;
		case 80: document.getElementById("p").style.borderColor = keyDownColor;
			break;
		//rowA
		case 65: document.getElementById("a").style.borderColor = keyDownColor;
			break;
		case 83: document.getElementById("s").style.borderColor = keyDownColor;
			break;
		case 68: document.getElementById("d").style.borderColor = keyDownColor;
			break;
		case 70: document.getElementById("f").style.borderColor = keyDownColor;
			break;
		case 71: document.getElementById("g").style.borderColor = keyDownColor;
			break;
		case 72: document.getElementById("h").style.borderColor = keyDownColor;
			break;
		case 74: document.getElementById("j").style.borderColor = keyDownColor;
			break;
		case 75: document.getElementById("k").style.borderColor = keyDownColor;
			break;
		case 76: document.getElementById("l").style.borderColor = keyDownColor;
			break;
		//rowZ
		case 90: document.getElementById("z").style.borderColor = keyDownColor;
			break;
		case 88: document.getElementById("x").style.borderColor = keyDownColor;
			break;
		case 67: document.getElementById("c").style.borderColor = keyDownColor;
			break;
		case 86: document.getElementById("v").style.borderColor = keyDownColor;
			break;
		case 66: document.getElementById("b").style.borderColor = keyDownColor;
			break;
		case 78: document.getElementById("n").style.borderColor = keyDownColor;
			break;
		case 77: document.getElementById("m").style.borderColor = keyDownColor;
			break;
	}
}
	
//Keyup Event
document.addEventListener("keyup", keyUnpressed, false);

function keyUnpressed(e) {
	if (e > 47) {
		var keyCode = e;
	} else {
		var keyCode = e.keyCode;
	}	
	
	switch(keyCode) {
		//row1
		case 49: document.getElementById("1").style.borderColor = keyUpColor;
			keyUp(0, "key1Count", "1");
			break;
		case 50: document.getElementById("2").style.borderColor = keyUpColor;
			keyUp(1, "key2Count", "2");
			break;
		case 51: document.getElementById("3").style.borderColor = keyUpColor;
			keyUp(2, "key3Count", "3");
			break;
		case 52: document.getElementById("4").style.borderColor = keyUpColor;
			keyUp(3, "key4Count", "4");
			break;
		case 53: document.getElementById("5").style.borderColor = keyUpColor;
			keyUp(4, "key5Count", "5");
			break;
		case 54: document.getElementById("6").style.borderColor = keyUpColor;
			keyUp(5, "key6Count", "6");
			break;
		case 55: document.getElementById("7").style.borderColor = keyUpColor;
			keyUp(6, "key7Count", "7");
			break;
		case 56: document.getElementById("8").style.borderColor = keyUpColor;
			keyUp(7, "key8Count", "8");
			break;
		case 57: document.getElementById("9").style.borderColor = keyUpColor;
			keyUp(8, "key9Count", "9");
			break;
		case 48: document.getElementById("0").style.borderColor = keyUpColor;
			keyUp(9, "key0Count", "0");
			break;
		//rowQ
		case 81: document.getElementById("q").style.borderColor = keyUpColor;
			keyUp(10, "keyQCount", "q");
			break;
		case 87: document.getElementById("w").style.borderColor = keyUpColor;
			keyUp(11, "keyWCount", "w");
			break;
		case 69: document.getElementById("e").style.borderColor = keyUpColor;
			keyUp(12, "keyECount", "e");
			break;
		case 82: document.getElementById("r").style.borderColor = keyUpColor;
			keyUp(13, "keyRCount", "r");
			break;
		case 84: document.getElementById("t").style.borderColor = keyUpColor;
			keyUp(14, "keyTCount", "t");
			break;
		case 89: document.getElementById("y").style.borderColor = keyUpColor;
			keyUp(15, "keyYCount", "y");
			break;
		case 85: document.getElementById("u").style.borderColor = keyUpColor;
			keyUp(16, "keyUCount", "u");
			break;
		case 73: document.getElementById("i").style.borderColor = keyUpColor;
			keyUp(17, "keyICount", "i");
			break;
		case 79: document.getElementById("o").style.borderColor = keyUpColor;
			keyUp(18, "keyOCount", "o");
			break;
		case 80: document.getElementById("p").style.borderColor = keyUpColor;
			keyUp(19, "keyPCount", "p");
			break;
		//rowA
		case 65: document.getElementById("a").style.borderColor = keyUpColor;
			keyUp(20, "keyACount", "a");
			break;
		case 83: document.getElementById("s").style.borderColor = keyUpColor;
			keyUp(21, "keySCount", "s");
			break;
		case 68: document.getElementById("d").style.borderColor = keyUpColor;
			keyUp(22, "keyDCount", "d");
			break;
		case 70: document.getElementById("f").style.borderColor = keyUpColor;
			keyUp(23, "keyFCount", "f");
			break;
		case 71: document.getElementById("g").style.borderColor = keyUpColor;
			keyUp(24, "keyGCount", "g");
			break;
		case 72: document.getElementById("h").style.borderColor = keyUpColor;
			keyUp(25, "keyHCount", "h");
			break;
		case 74: document.getElementById("j").style.borderColor = keyUpColor;
			keyUp(26, "keyJCount", "j");
			break;
		case 75: document.getElementById("k").style.borderColor = keyUpColor;
			keyUp(27, "keyKCount", "k");
			break;
		case 76: document.getElementById("l").style.borderColor = keyUpColor;
			keyUp(28, "keyLCount", "l");
			break;
		//rowZ
		case 90: document.getElementById("z").style.borderColor = keyUpColor;
			keyUp(29, "keyZCount", "z");
			break;
		case 88: document.getElementById("x").style.borderColor = keyUpColor;
			keyUp(30, "keyXCount", "x");
			break;
		case 67: document.getElementById("c").style.borderColor = keyUpColor;
			keyUp(31, "keyCCount", "c");
			break;
		case 86: document.getElementById("v").style.borderColor = keyUpColor;
			keyUp(32, "keyVCount", "v");
			break;
		case 66: document.getElementById("b").style.borderColor = keyUpColor;
			keyUp(33, "keyBCount", "b");
			break;
		case 78: document.getElementById("n").style.borderColor = keyUpColor;
			keyUp(34, "keyNCount", "n");
			break;
		case 77: document.getElementById("m").style.borderColor = keyUpColor;
			keyUp(35, "keyMCount", "m");
			break;
	}	
}

function keyUp(keyVar, keySpan, key) {
	//Increment Key Count
	keys[keyVar] += manualKeyPress;
	document.getElementById(keySpan).innerHTML = keys[keyVar];
	
	if (keys[keyVar] >= 1000) {
		keysFormat = Math.ceil((keys[keyVar]/1000) * 100) / 100;
		document.getElementById(keySpan).innerHTML = keysFormat + "K";
	}
		
	//Change Key to Next Level
	if (keys[keyVar] >= yellowBeltReq) {document.getElementById(key).style.backgroundColor = "#F3F781";}
	if (keys[keyVar] >= goldBeltReq) {document.getElementById(key).style.backgroundColor = "#FACC2E";}
	if (keys[keyVar] >= orangeBeltReq) {document.getElementById(key).style.backgroundColor = "#FE9A2E";}
	if (keys[keyVar] >= greenBeltReq) {document.getElementById(key).style.backgroundColor = "#01DF01";}
	if (keys[keyVar] >= blueBeltReq) {document.getElementById(key).style.backgroundColor = "#00BFFF";}
	if (keys[keyVar] >= purpleBeltReq) {document.getElementById(key).style.backgroundColor = "#9F81F7";}
	if (keys[keyVar] >= brownBeltReq) {
		document.getElementById(key).style.backgroundColor = "#8A4B08";
		document.getElementById(key).style.color = "#ffffff";
	}
	if (keys[keyVar] >= redBeltReq) {
		document.getElementById(key).style.backgroundColor = "#DF0101";
		document.getElementById(key).style.color = "#ffffff";
	}
	if (keys[keyVar] >= blackBeltReq) {
		document.getElementById(key).style.backgroundColor = "#000000";
		document.getElementById(key).style.color = "#ffffff";
	}
	if (keys[keyVar] >= mBlackBeltReq) {
		document.getElementById(key).style.fontWeight = "bold"
		document.getElementById(key).style.color = "gold";
	}
	
	//Total Key Count and Bin
	keyCount += manualKeyPress;
	keyCarton += manualKeyPress;
	document.getElementById("keyCarton").innerHTML = keyCarton;
}

//Key Power x2
function keyPower() {
	if (keyPowerAvail == true && keyPowerActive == false){
		manualKeyPress += 1;
		document.getElementById("keyPower2").style.color = "#ababab";
		document.getElementById("keyPower2").style.backgroundColor = "#dedede";
		document.getElementById("hireRobot").style.visibility = "visible";
		keyPowerActive = true;
		document.getElementById("keyPowerUp").style.visibility = "visible";
	}
}

//Activate Script
function timerStartBot() {
	if (keyBotAvail == true) {
		keyCarton -= script1Cost;
		document.getElementById("keyCarton").innerHTML = keyCarton;
		scriptAutoCount += 1;
		script1Count += 1;
		document.getElementById("script1Count").innerHTML = script1Count;
		script1Cost *= 2.5;
		document.getElementById("script1Cost").innerHTML = Math.ceil(script1Cost * 100) / 100;
		if (keyBotActive == false) {
			timerSB = setInterval(keyBot,1000);
		}
		keyBotActive = true;
	}
}
function keyBot() {
	keyCarton += scriptAutoCount;
	document.getElementById("keyBotRate").innerHTML = scriptAutoCount + "/s";
	document.getElementById("keyCarton").innerHTML = keyCarton;
}
//End Activate KeyBot

</script>
</head>

<body onLoad="timer()">

<table width="100%" border="0" cellpadding="20">
<tr>
<td colspan="2"><span id="title">Keyboard Ninja</span></td>
</tr><tr>
<td valign="top" width="350"><span id="subtitle">Scripts</span>
<p>
<!-- Moving this functionality to the Belt text -->
<!--<div id="keyPower2" onclick="keyPower()">
	<span id="keyPowerText">Keys x2: Requires Yellow Belt<br>
	<i><small>Increase keys per press to 2</small></i></span>
	<span id="keyPowerUp" onclick="keyPowerUp()">+</span>
</div>-->
<div id="hireRobot" onclick="timerStartBot()">
	<span id="keyBotText">Simple_Script_v01: <span id="script1Cost">10</span> Keys &nbsp; <span id="script1Count">0</span><br>
	<i><small>Automates 1 key/second</small></i></span>
</div>

</td>
<td valign="top">

<div id="keyboard">

	<div id="row1">
	<span id="1">1</span>
	<span id="2">2</span>
	<span id="3">3</span>
	<span id="4">4</span>
	<span id="5">5</span>
	<span id="6">6</span>
	<span id="7">7</span>
	<span id="8">8</span>
	<span id="9">9</span>
	<span id="0">0</span>
	</div>

	<div id="rowQ">
	<span id="q">Q</span>
	<span id="w">W</span>
	<span id="e">E</span>
	<span id="r">R</span>
	<span id="t">T</span>
	<span id="y">Y</span>
	<span id="u">U</span>
	<span id="i">I</span>
	<span id="o">O</span>
	<span id="p">P</span>
	</div>

	<div id="rowA">
	<span id="a">A</span>
	<span id="s">S</span>
	<span id="d">D</span>
	<span id="f">F</span>
	<span id="g">G</span>
	<span id="h">H</span>
	<span id="j">J</span>
	<span id="k">K</span>
	<span id="l">L</span>
	</div>

	<div id="rowZ">
	<span id="z">Z</span>
	<span id="x">X</span>
	<span id="c">C</span>
	<span id="v">V</span>
	<span id="b">B</span>
	<span id="n">N</span>
	<span id="m">M</span>
	</div>
	
</div>

</td>

<td valign="top">
<span id="subtitle">Stats</span><br>
<p>
Belt: <span id="belt">White</span>
<p>
Key Bin: <span id="keyCarton">0</span><br>
Total Keys Pressed: <span id="totalKeys">0</span><br>
Average Key Count: <span id="avgKeys">0</span>
<p>
Keys Per Press: <span id="keyPowerRate">1</span><br>
Scripts: <span id="keyBotRate">0/s</span>
<p>
Key Counts<br>
	<table width="100%">
	<tr valign="top">
	<td>
		1: <span id="key1Count">0</span><br>
		2: <span id="key2Count">0</span><br>
		3: <span id="key3Count">0</span><br>
		4: <span id="key4Count">0</span><br>
		5: <span id="key5Count">0</span><br>
		6: <span id="key6Count">0</span><br>
		7: <span id="key7Count">0</span><br>
		8: <span id="key8Count">0</span><br>
		9: <span id="key9Count">0</span><br>
		0: <span id="key0Count">0</span><br>
	</td>
	<td>
		Q: <span id="keyQCount">0</span><br>
		W: <span id="keyWCount">0</span><br>
		E: <span id="keyECount">0</span><br>
		R: <span id="keyRCount">0</span><br>
		T: <span id="keyTCount">0</span><br>
		Y: <span id="keyYCount">0</span><br>
		U: <span id="keyUCount">0</span><br>
		I: <span id="keyICount">0</span><br>
		O: <span id="keyOCount">0</span><br>
		P: <span id="keyPCount">0</span><br>
	</td>
	<td>
		A: <span id="keyACount">0</span><br>
		S: <span id="keySCount">0</span><br>
		D: <span id="keyDCount">0</span><br>
		F: <span id="keyFCount">0</span><br>
		G: <span id="keyGCount">0</span><br>
		H: <span id="keyHCount">0</span><br>
		J: <span id="keyJCount">0</span><br>
		K: <span id="keyKCount">0</span><br>
		L: <span id="keyLCount">0</span><br>
	</td>
	<td>
		Z: <span id="keyZCount">0</span><br>
		X: <span id="keyXCount">0</span><br>
		C: <span id="keyCCount">0</span><br>
		V: <span id="keyVCount">0</span><br>
		B: <span id="keyBCount">0</span><br>
		N: <span id="keyNCount">0</span><br>
		M: <span id="keyMCount">0</span><br>
	</td>
	</tr>
	</table>
</td>

</tr>
<tr>
<td colspan="2">

<span id="subtitle">Achievements</span>
<p>

<span id="keyCount10"><span id="keyCount10Info">10 key presses</span> 10</span>
<span id="keyCount100"><span id="keyCount100Info">100 key presses</span> 100</span>
<span id="keyCount1K"><span id="keyCount1KInfo">1K key presses</span> 1K</span>
<span id="keyCount10K"><span id="keyCount10KInfo">10K key presses</span> 10K</span>
<p>
<span id="numbers1"><span id="numbers1Info">Pressed each number</span> #s</span>
<span id="letters1"><span id="letters1Info">Pressed each letter</span> Ls</span>
<p>
<span id="yellowBelt"><span id="yellowBeltInfo">Earned yellow belt</span> &nbsp;&nbsp;</span>
<span id="goldBelt"><span id="goldBeltInfo">Earned gold belt</span> &nbsp;&nbsp;</span>
<span id="orangeBelt"><span id="orangeBeltInfo">Earned orange belt</span> &nbsp;&nbsp;</span>
<span id="greenBelt"><span id="greenBeltInfo">Earned green belt</span> &nbsp;&nbsp;</span>
<span id="blueBelt"><span id="blueBeltInfo">Earned blue belt</span> &nbsp;&nbsp;</span>
<span id="masterKey"><span id="masterKeyInfo" style="color:black; font-weight:normal">Earned one master black belt key</span> Mk</span>

</td>
</tr>
</table>

</body>

</html>
